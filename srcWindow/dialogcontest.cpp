/*
 * Project: ARDA Student Manager
 * Author: German Niyazyan (Gerakl1123)
 * License: CC BY-NC 4.0 ‚Äî Non-commercial use only
 *
 * ¬© 2025 German Niyazyan
 * https://github.com/Gerakl1123/ARDA_Stud_Manager
 * https://creativecommons.org/licenses/by-nc/4.0/
 */

#include "dialogcontest.h"
#include "ui_dialogcontest.h"
#include"ContestCore/ContestManager.h"
#include"ContestCore/AttestatContest.h"
#include"ContestCore/TopBallContest.h"
#include"Student.h"
#include"FileChooicer.h"
#include"BuildForm.h"

DialogContest::DialogContest(DialogMode mode, QWidget *parent)
    : QDialog(parent)
    , ui(new Ui::DialogContest)
    , currentMode(mode)
{

    ui->setupUi(this);

    fileManager = std::make_unique<FileManager>(this);

    setWindowTitle("–ü–æ–¥–ú–µ–Ω—é");

    FormBuilder temp;

    buttonLineEditPairs = temp.initializer(this);

    for (const auto& pair : buttonLineEditPairs) {
        setupBrowseButton(fileManager.get(),pair.first,pair.second);
    }

    connect(ui->buttonBox, &QDialogButtonBox::accepted, this, &DialogContest::handleAccepted);
    connect(ui->pushButtonInfoAttestat, &QPushButton::clicked, this, [this] {
        QMessageBox::information(this, "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—É—Ä—Å–µ",
                                 "–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è:\n\n"
                                 "üìÅ –§–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤\n"
                                 "üíæ –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –§–∞–π–ª–ë—é–¥–∂–µ—Ç.txt / –§–∞–π–ª–ö–æ–º–º–µ—Ä—Ü–∏—è.txt)\n"
                                 "üè´ –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞\n"
                                 "üéØ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—é–¥–∂–µ—Ç–Ω—ã—Ö –º–µ—Å—Ç\n"
                                 "üìä –ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª –Ω–∞ –±—é–¥–∂–µ—Ç\n"
                                 "üíº –ü—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª –Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç\n\n"
                                 "‚úÖ –ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω–∫—É—Ä—Å–∞.");
    });

    setupInterface();

}


DialogContest::~DialogContest()
{
    delete ui;
}

void DialogContest::setupInterface()
{
    switch (currentMode) {
    case ModeCurrent:
        serelizer.DataSerelization(this,ModeSerelization::MaxScore);

        for(int i = 0; i< ui->gridLayout->count();++i)
        {
            QWidget* w = ui->gridLayout->itemAt(i)->widget();
            if(w)
            {
                w->hide();
                ui->pushButtonInfoAttestat->hide();
            }
        }
        break;
    case ModeAttestat:

        serelizer.DataSerelization(this,ModeSerelization::Attestat);

        for (int i = 0; i < ui->verticalLayout->count(); ++i) {

            QWidget *w = ui->verticalLayout->itemAt(i)->widget();

            if (w)
            {
                w->hide();

            }
        }

        break;
    }
}

bool DialogContest::OnBudget()
{

    ContestResult result;

    QString QFakyltet = ui->lineEdit_Attestat_Fakyltet->text();
    QString file = ui->lineEdit_Attestat_InputFile->text();
    QString savefile = ui->lineEdit_Attestat_FileSave->text();
    QString logFile = ui->lineEdit_Attestat_FileLog ->text();
    QString BudgetMinBall = ui->lineEdit_Attestat_BudgetMinBall->text();
    QString ContractMinBall = ui->lineEdit_Attestat_ContractMinBall->text();
    QString slotsBudget = ui->lineEdit_Attestat_BudgetSlots->text();


    ContestManager manager(logFile);

    bool ok1 = true;
    bool ok2 = true;
    bool ok3 = true;

    double budget = BudgetMinBall.toDouble(&ok1);
    double contract = ContractMinBall.toDouble(&ok2);
    double SlotBudget = slotsBudget.toInt(&ok3);

    if (!ok1 || !ok2 || !ok3) {
        QMessageBox::warning(this, "–û—à–∏–±–∫–∞", "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–æ—Ö–æ–¥–Ω—ã—Ö –±–∞–ª–ª–æ–≤");
        return false;
    }
    AttestatContest contest;

    result = manager.runContestAttestat(contest,file,savefile,budget,contract,SlotBudget,QFakyltet);

    if(!result.budget.empty())
    {
        QMessageBox::information(this, "–ö–æ–Ω–∫—É—Ä—Å –ê—Ç—Ç–µ—Å—Ç–∞—Ç–æ–≤",QString("–î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ñ–∞–π–ª"));

    }else
    {
        QMessageBox::information(this, "–ö–æ–Ω–∫—É—Ä—Å –ê—Ç—Ç–µ—Å—Ç–∞—Ç–æ–≤",
                                 "–ù–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ–ø–∞–≤—à–∏—Ö –Ω–∞ –±—é–¥–∂–µ—Ç");
    }


    return !result.winnerInfo.empty();;

}

bool DialogContest::onMaxScore()
{

    ContestResult result;

    QString studentFile = ui->lineEdit_MaxScore_FileInput->text();
    QString fileSave = ui->lineEdit_MaxScore_FileSave->text();
    QString faculty = ui->lineEdit_MaxScore_Faculty->text();
    QString LogFile = ui->lineEdit_MaxScore_FileLog->text();

    ContestManager manager(LogFile);

    TopBallContest contest;

    result = manager.runContestMaxScore(contest,studentFile,fileSave,faculty);

    if(!result.winnerInfo.empty())
    {
        const Student& winner = *result.winnerInfo.at(0);

        QMessageBox::information(this,
                                 "–ö–æ–Ω–∫—É—Ä—Å –í—ã—Å—à–∏–π –ë–∞–ª–ª",
                                 QString("–î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ñ–∞–π–ª.\n–í—ã–∏–≥—Ä–∞–ª —Å—Ç—É–¥–µ–Ω—Ç: %1 —Å –±–∞–ª–ª–æ–º %2")
                                     .arg(QString::fromStdString(winner.name))
                                     .arg(winner.ball));

    }else
    {
        QMessageBox::information(this, "–ö–æ–Ω–∫—É—Ä—Å –í—ã—Å—à–∏–π –ë–∞–ª–ª",
                                 "–ù–µ—Ç –ø–æ–±–∏–¥–∏—Ç–µ–ª—è –≤ —ç—Ç–æ–º –∫–æ–Ω–∫—É—Ä—Å–µ");
    }

    return !result.winnerInfo.empty();

}


void DialogContest::handleAccepted()
{
    if (currentMode == ModeAttestat) {
        if (OnBudget()) {
            accept();
        } else {
            QMessageBox::warning(this, "–†–µ–∑—É–ª—å—Ç–∞—Ç", "–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.");
        }
    } else if (currentMode == ModeCurrent) {
        if (onMaxScore()) {
            accept();
        } else {
            QMessageBox::information(this, "–†–µ–∑—É–ª—å—Ç–∞—Ç", "–ù–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.");
        }
    }
}


void DialogContest::setupBrowseButton(FileManager *fileManager,QLineEdit* line, QPushButton* btn)
{
    FormBuilder::setupBrowseButton(btn,line,fileManager);

}
